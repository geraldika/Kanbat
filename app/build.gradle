/*
 * Copyright 2022 Yulia Batova
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.carpediemsolution.kanbat"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner = 'androidx.test.runner.AndroidJUnitRunner'
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file('/Users/yuliabatova/AndroidStudioProjects/kanbat')
            storePassword 'carpepassword'
            keyAlias 'carpe'
            keyPassword 'carpepassword'
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            resValue "string", "app_name", "Kanbat Debug"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            resValue "string", "app_name", "Kanbat"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }

    buildFeatures {
        viewBinding true
        compose = true
    }

    kotlinOptions {
        freeCompilerArgs = ['-Xjvm-default=enable']
        jvmTarget = "1.8"
    }
    lint {
        abortOnError false
        disable 'MissingTranslation'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$libVersions.stdlib"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$libVersions.coroutinesAndroid"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$libVersions.lifecycleKtx"
    implementation "androidx.multidex:multidex:$libVersions.multidex"
    implementation "androidx.core:core-ktx:$libVersions.androidx"
    implementation "androidx.annotation:annotation:$libVersions.annotations"

    implementation "com.google.android.material:material:$libVersions.material"
    implementation "androidx.appcompat:appcompat:$libVersions.appcompat"
    implementation "androidx.fragment:fragment-ktx:$libVersions.androidxfragment"
    implementation "androidx.dynamicanimation:dynamicanimation:$libVersions.dynamicanimation"
    implementation "androidx.recyclerview:recyclerview:$libVersions.recyclerview"
    implementation "androidx.cardview:cardview:$libVersions.cardview"
    implementation "androidx.constraintlayout:constraintlayout:$libVersions.constraintLayout"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$libVersions.navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$libVersions.navigation"

    // Android X Compose
    implementation "androidx.compose.ui:ui:$libVersions.composeVersion"
    implementation "androidx.compose.material:material:$libVersions.composeVersion"
    debugImplementation "androidx.compose.ui:ui-tooling:$libVersions.composeVersion"
    implementation "androidx.compose.ui:ui-tooling-preview:$libVersions.composeVersion"
    implementation "androidx.navigation:navigation-compose:2.5.1"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation "androidx.compose.material3:material3:1.0.0-beta01"
    implementation 'androidx.compose.runtime:runtime-livedata:1.3.0-beta01'

    // DI
    implementation "com.google.dagger:dagger:${libVersions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${libVersions.dagger}"
    implementation("com.google.dagger:dagger-android:${libVersions.dagger}") {
        exclude group: "com.google.guava", module: 'listenablefuture'
    }
    kapt "com.google.dagger:dagger-android-processor:${libVersions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${libVersions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${libVersions.dagger}"

    // DB
    implementation "androidx.room:room-runtime:$libVersions.room"
    implementation "androidx.room:room-ktx:$libVersions.room"
    implementation "androidx.room:room-rxjava2:$libVersions.room"
    implementation "androidx.room:room-paging:$libVersions.roomPaging"
    kapt "androidx.room:room-compiler:$libVersions.room"

    // Paging
    implementation "androidx.paging:paging-runtime-ktx:$libVersions.paging"
    testImplementation "androidx.paging:paging-common-ktx:$libVersions.paging"
    implementation "androidx.paging:paging-guava:$libVersions.paging"

    implementation "io.reactivex.rxjava2:rxkotlin:$libVersions.rxKotlin"
    implementation "io.reactivex.rxjava2:rxandroid:$libVersions.rxAndroid"
    implementation "androidx.paging:paging-runtime-ktx:$libVersions.paging"
    implementation "androidx.paging:paging-rxjava2-ktx:$libVersions.paging"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$libVersions.coroutinesRx"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$libVersions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$libVersions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$libVersions.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$libVersions.okhttp"
    implementation("com.squareup.okhttp3:okhttp:$libVersions.okhttp")
    implementation("com.squareup.okhttp3:okhttp-urlconnection:$libVersions.okhttp")

    // Glide
    implementation "com.github.bumptech.glide:glide:$libVersions.glide"
    kapt "com.github.bumptech.glide:compiler:$libVersions.glide"
    implementation("com.github.bumptech.glide:recyclerview-integration:$libVersions.glide") {
        transitive = false
    }

    implementation("androidx.work:work-runtime-ktx:$libVersions.workRuntime") {
        exclude group: "com.google.guava", module: 'listenablefuture'
    }
}